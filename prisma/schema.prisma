// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Trip {
  id               String   @id @default(uuid())
  serviceType      String
  routeName        String
  routeOrigin      String
  routeDestination String
  departureDate    DateTime
  departureTime    String
  totalSeats       Int
  availableSeats   Int
  occupiedSeats    String?
  fare             Int
  durationMinutes  Int
  boardingPoint    String
  droppingPoint    String
  promoActive      Boolean  @default(false)
  hasDeparted      Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  bookings       Booking[] @relation("TripBooking")
  returnBookings Booking[] @relation("ReturnTripBooking")
}

model Booking {
  id                  String    @id @default(uuid())
  tripId              String
  trip                Trip      @relation("TripBooking", fields: [tripId], references: [id])
  returnTripId        String?
  returnTrip          Trip?     @relation("ReturnTripBooking", fields: [returnTripId], references: [id])
  userName            String
  userEmail           String
  userPhone           String?
  seats               String
  returnSeats         String?
  seatCount           Int
  totalPrice          Float
  paymentMode         String
  boardingPoint       String
  droppingPoint       String
  returnBoardingPoint String?
  returnDroppingPoint String?
  orderId             String    @unique
  transactionToken    String?
  paymentStatus       String    @default("pending")
  bookingStatus       String    @default("confirmed")
  promoCode           String?
  discountAmount      Float     @default(0)
  competitorInfo      Json?
  scanned             Boolean   @default(false)
  lastScanned         DateTime?
  scannerId           String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  passengers Passenger[]
}

model Passenger {
  id         String   @id @default(uuid())
  booking    Booking  @relation(fields: [bookingId], references: [id], onDelete: Cascade)
  bookingId  String
  firstName  String
  lastName   String
  seatNumber String
  title      String
  isReturn   Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
